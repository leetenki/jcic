<% if project.trader.validation_mode == "simplest" %>
      <div id="excel_realder_opener" class="col col-md-2 col-md-offset-5 btn btn-default" style="border-radius: 30px; margin-top:20px; margin-bottom: -20px;" onclick="openExcelReader()">上传Excel</div>

      <div style="text-align:center; padding: 10px; width: 400px; margin:40px auto 10px auto; border:dashed 2px black; border-radius: 30px; display:none;" id="file-reader">
            <p>
              Excel全自动上传功能 (
                <% if project.trader.individual_japan_company != "random" %>
                  <a class="btn btn-success" href="/individual_<%= project.trader.individual_japan_company %>.xlsx" download="个签模版_<%= Constants::JAPAN_SIDE_COMPANY[project.trader.individual_japan_company.intern][:company_name] %>.xlsx">个签模版</a>, 
                <% end %>
                <% if project.trader.group_japan_company != "random" %>
                  <a class="btn btn-success" href="/group_<%= project.trader.group_japan_company %>.xlsx" download="团签模版_<%= Constants::JAPAN_SIDE_COMPANY[project.trader.group_japan_company.intern][:company_name] %>.xlsx">团签模版</a>
                <% end %>
              )
            </p>
            <input type="file" name="xlfile" id="xlf" class="form-control" style="width:350px; margin:auto; padding:10px 10px; margin-bottom:5px;"/>
            <a href="/description_excel">Excel使用说明</a>
      </div>
      <script type="text/javascript" src="/xlsx.core.min.js "></script>
      <script type="text/javascript">
            function openExcelReader() {
              $("#file-reader")[0].style.display = "block";
              $("#excel_realder_opener")[0].style.display = "none";
            }
            function handleDragover(e) {
                  e.stopPropagation();
                  e.preventDefault();
                  e.dataTransfer.dropEffect = 'copy';
                  document.body.style.backgroundColor = "#ffffaa"
            }
            function handleDragleave(e) {
                  e.stopPropagation();
                  e.preventDefault();
                  e.dataTransfer.dropEffect = 'copy';
                  document.body.style.backgroundColor = "#ffffff"
            }

            function handleDrop(e) {
              e.stopPropagation();
              e.preventDefault();
              var files = e.dataTransfer.files;
              var i,f;
              for (i = 0, f = files[i]; i != files.length; ++i) {
                var reader = new FileReader();
                var name = f.name;
                reader.onload = function(e) {
                  var data = e.target.result;
                  var workbook = XLSX.read(data, {type: 'binary'});
                  parseWorkBook(workbook, name);
                };
                reader.readAsBinaryString(f);
              }
              document.body.style.backgroundColor = "#ffffff"
            }
            document.body.addEventListener('drop', handleDrop, false);
            document.body.addEventListener('dragenter', handleDragover, false);
            document.body.addEventListener('dragover', handleDragover, false);
            document.body.addEventListener('dragleave', handleDragleave, false);
            document.body.addEventListener('dragend', handleDragleave, false);

            function handleFile(e) {
              var files = e.target.files;
              var i,f;
              for (i = 0, f = files[i]; i != files.length; ++i) {
                var reader = new FileReader();
                var name = f.name;
                reader.onload = function(e) {
                  var data = e.target.result;
                  var workbook = XLSX.read(data, {type: 'binary'});
                  parseWorkBook(workbook, name);
                };
                reader.readAsBinaryString(f);
              }
            }
            document.getElementById("xlf").addEventListener('change', handleFile, false);

            /************************************** fill ****************************************/
            function fillForm(chinaCompanyName, chinaCompanyCode, visaType, dateArrival, dateLeaving, clients, schedules) {
                // china company name
                companyNames = JSON.parse(document.getElementById("company_data_json").value);
                var valid = false;
                var simpleChinaCompanyCode = simplized(chinaCompanyCode.replace(/(^\s+)|(\s+$)|[-]/g, "").toLowerCase());
                var simpleChinaCompanyName = simplized(chinaCompanyName.replace(/(^\s+)|(\s+$)|[-]/g, "").toLowerCase());
                var matched = false;

                var editDistances = []
                for(var i = 0; i < companyNames.length; i++) {
                  var simplizedSearchName = simplized(companyNames[i].name)
                  var distances = [
                    getEditDistance(simplizedSearchName, simpleChinaCompanyName), 
                    getEditDistance(simplizedSearchName, simpleChinaCompanyName.replace(/集团/g, "")),
                    getEditDistance(simplizedSearchName, simpleChinaCompanyName.replace(/有限公司/g, "")),
                    getEditDistance(simplizedSearchName, simpleChinaCompanyName.replace(/旅行社/g, "")),
                    getEditDistance(simplizedSearchName, simpleChinaCompanyName.replace(/旅行社/g, "有限公司")),
                    getEditDistance(simplizedSearchName, simpleChinaCompanyName.replace(/有限公司/g, "旅行社")),
                    getEditDistance(simplizedSearchName, simpleChinaCompanyName.replace(/有限会社/g, "有限公司")),
                    getEditDistance(simplizedSearchName.replace(/\(.{0,}\)/g, "").replace(/（.{0,}）/g, ""), simpleChinaCompanyName),
                  ];
                  if(simpleChinaCompanyName.match(/贵州|四川|广东|湖北|湖南|山东|黑龙江|吉林|辽宁|江苏|浙江/) || 
                      simpleChinaCompanyName.match(/广州|深圳|北京|天津|武汉|沈阳|锦州|无锡|苏州|南京|扬州|成都|杭州/)
                    ) {

                    var tmpChinaCompanyName = "";
                    var tmpChinaCompanyName2 = "";
                    if(simpleChinaCompanyName.match(/贵州|四川|广东|湖北|湖南|山东|黑龙江|吉林|辽宁|江苏|浙江/)) {
                      if(simpleChinaCompanyName.match(/省/)) {
                        tmpChinaCompanyName = simpleChinaCompanyName.replace("省", "");
                        tmpChinaCompanyName2 = simpleChinaCompanyName.replace(/贵州省|四川省|广东省|湖北省|湖南省|山东省|黑龙江省|吉林省|辽宁省|江苏省|浙江省/, "");
                      } else {
                        tmpChinaCompanyName = simpleChinaCompanyName.replace(/贵州|四川|广东|湖北|湖南|山东|黑龙江|吉林|辽宁|江苏|浙江/, simpleChinaCompanyName.match(/贵州|四川|广东|湖北|湖南|山东|黑龙江|吉林|辽宁|江苏|浙江/)[0] + "省")
                        tmpChinaCompanyName2 = simpleChinaCompanyName.replace(/贵州|四川|广东|湖北|湖南|山东|黑龙江|吉林|辽宁|江苏|浙江/, "");
                      }
                    } else {
                      if(simpleChinaCompanyName.match(/市/)) {
                        tmpChinaCompanyName = simpleChinaCompanyName.replace("市", "");
                        tmpChinaCompanyName2 = simpleChinaCompanyName.replace(/广州市|深圳市|北京市|天津市|武汉市|沈阳市|锦州市|无锡市|苏州市|南京市|扬州市|成都市|杭州市/, "");
                      } else {
                        tmpChinaCompanyName = simpleChinaCompanyName.replace(/广州|深圳|北京|天津|武汉|沈阳|锦州|无锡|苏州|南京|扬州|成都|杭州/, simpleChinaCompanyName.match(/广州|深圳|北京|天津|武汉|沈阳|锦州|无锡|苏州|南京|扬州|成都|杭州/)[0] + "市")
                        tmpChinaCompanyName2 = simpleChinaCompanyName.replace(/广州|深圳|北京|天津|武汉|沈阳|锦州|无锡|苏州|南京|扬州|成都|杭州/, "")
                      }
                    }

                    distances.push(getEditDistance(simplizedSearchName, tmpChinaCompanyName));
                    distances.push(getEditDistance(simplizedSearchName, tmpChinaCompanyName.replace(/集团/g, "")));
                    distances.push(getEditDistance(simplizedSearchName, tmpChinaCompanyName.replace(/有限公司/g, "")));
                    distances.push(getEditDistance(simplizedSearchName, tmpChinaCompanyName.replace(/旅行社/g, "")));
                    distances.push(getEditDistance(simplizedSearchName, tmpChinaCompanyName.replace(/旅行社/g, "有限公司")));
                    distances.push(getEditDistance(simplizedSearchName, tmpChinaCompanyName.replace(/有限公司/g, "旅行社")));
                    distances.push(getEditDistance(simplizedSearchName, tmpChinaCompanyName.replace(/有限会社/g, "有限公司")));

                    distances.push(getEditDistance(simplizedSearchName.replace(/\(.{0,}\)/g, "").replace(/（.{0,}）/g, ""), tmpChinaCompanyName));
                    distances.push(getEditDistance(simplizedSearchName, tmpChinaCompanyName2));
                    distances.push(getEditDistance(simplizedSearchName, tmpChinaCompanyName2.replace(/集团/g, "")));
                    distances.push(getEditDistance(simplizedSearchName, tmpChinaCompanyName2.replace(/有限公司/g, "")));
                    distances.push(getEditDistance(simplizedSearchName, tmpChinaCompanyName2.replace(/旅行社/g, "")));
                    distances.push(getEditDistance(simplizedSearchName, tmpChinaCompanyName2.replace(/旅行社/g, "有限公司")));
                    distances.push(getEditDistance(simplizedSearchName, tmpChinaCompanyName2.replace(/有限公司/g, "旅行社")));
                    distances.push(getEditDistance(simplizedSearchName, tmpChinaCompanyName2.replace(/有限会社/g, "有限公司")));
                    distances.push(getEditDistance(simplizedSearchName.replace(/\(.{0,}\)/g, "").replace(/（.{0,}）/g, ""), tmpChinaCompanyName2));
                  }

                  editDistances.push(Math.min.apply(null, distances));

                  if((simpleChinaCompanyName.length > 0 && companyNames[i].search_text.match(simpleChinaCompanyName)) || 
                    (simpleChinaCompanyCode.length > 0 && companyNames[i].search_text.match(simpleChinaCompanyCode))) {
                      $("#china_company_container input")[0].value = companyNames[i].name;
                      matched = true;
                      break;
                  }
                }
                if(!matched && chinaCompanyName.length > 0) {
                  var minIndex = Math.min.apply(null, editDistances)
                  if(editDistances.indexOf(minIndex) == editDistances.lastIndexOf(minIndex) && minIndex <= 1) {
                    $("#china_company_container input")[0].value = companyNames[editDistances.indexOf(minIndex)].name;
                  } else {
                    $("#china_company_container input")[0].value = chinaCompanyName;
                  }
                }

                // visa type
                $("#visaType input").each(function() {
                      this.removeAttribute("checked")
                })                  
                $("#visaType label").each(function() {
                      this.className = "btn btn-default"
                })
                if(visaType.match(/個|个|单|単|独|普通|普通|一般|一般|individual/)) {
                      $("#visaType input")[1].setAttribute("checked", "checked")
                      $("#visaType label")[1].className = "btn btn-default active"
                } else if(visaType.match(/团|団|集|group/)) {
                      $("#visaType input")[0].setAttribute("checked", "checked")
                      $("#visaType label")[0].className = "btn btn-default active"
                } else if(visaType.match(/3|３|三|三/)) {
                      $("#visaType input")[2].setAttribute("checked", "checked")
                      $("#visaType label")[2].className = "btn btn-default active"
                } else if(visaType.match(/5|５|五|五/)) {
                      $("#visaType input")[3].setAttribute("checked", "checked")
                      $("#visaType label")[3].className = "btn btn-default active"
                }

                // date arrival and leaving
                $("#date_arrival_container input")[0].value = replaceDateStr(dateArrival);
                $("#date_leaving_container input")[0].value = replaceDateStr(dateLeaving);

                // clients
                if(clients.length >= 1) {
                  // init and clear gender field
                  initClientsTable();
                  $("#clients_container .gender_type label").each(function() {
                    this.className = "btn btn-default"
                  });                
                  $("#clients_container .gender_type label input").each(function() {
                      this.checked = false
                  });

                  fillRow($("#clients_container table tr")[0].id, clients[0]);

                  for(var i = 1; i < clients.length; i++) {
                      var id = addClientRow();
                      fillRow(id, clients[i]);                              
                  }
                }

                // schedules
                if(validateDateArrival() && validateDateLeaving()) {
                    $("#schedules_container table textarea").removeAttr("disabled");
                    regenerateScheduleTable();   

                    for(var i = 0; i < schedules.length && i < $("#schedules_container tr").length; i++) {
                          $(".plan_container textarea")[i].value = schedules[i].plan.replace(/[\s\r\n　]{1,}/g, " ").replace(/^[\s 　]/, "").replace(/[\s 　]$/, "")
                          $(".hotel_container textarea")[i].value = schedules[i].hotel.replace(/[\s\r\n　]{1,}/g, " ").replace(/^[\s 　]/, "").replace(/[\s 　]$/, "")
                    }
                } 
            }

            // get cell value
            function getCellValue(worksheet, rowIndex, colIndex) {                  
              var colName = String.fromCharCode(colIndex)
              var cellName = colName + rowIndex
              if(worksheet[cellName]) {
                return worksheet[cellName].w || worksheet[cellName].v;
              } else {
                return "";
              }
            }

            // parse workbook to worksheet
            function getSeperateWorkBook(workbook) {
              var basicRate = 0;
              var clientsRate = 0;
              var schedulesRate = 0;
              var basicSheet = null;
              var clientsSheet = null;
              var schedulesSheet = null;

              for(var i = 0; i < workbook.SheetNames.length; i++) {
                var worksheet = workbook.Sheets[workbook.SheetNames[i]];
                if(!worksheet["!ref"]) {
                  break;
                }

                if(worksheet["!ref"].split(":").length == 1) {
                  excelLeft = worksheet["!ref"].match(/[A-Za-z]{1,}/)[0].charCodeAt()
                  excelTop = parseInt(worksheet["!ref"].match(/[0-9]{1,}/)[0])
                  excelRight = worksheet["!ref"].match(/[A-Za-z]{1,}/)[0].charCodeAt()
                  excelBottom = parseInt(worksheet["!ref"].match(/[0-9]{1,}/)[0])
                } else {
                  excelLeft = worksheet["!ref"].split(":")[0].match(/[A-Za-z]{1,}/)[0].charCodeAt()
                  excelTop = parseInt(worksheet["!ref"].split(":")[0].match(/[0-9]{1,}/)[0])
                  excelRight = worksheet["!ref"].split(":")[1].match(/[A-Za-z]{1,}/)[0].charCodeAt()
                  excelBottom = parseInt(worksheet["!ref"].split(":")[1].match(/[0-9]{1,}/)[0])
                }

                basicRate = clientsRate = schedulesRate = 0;
                for(var rowIndex = excelTop; rowIndex <= excelBottom; rowIndex++) {
                  for(var colIndex = excelLeft; colIndex <= excelRight; colIndex++) {
                    var cellValue = getCellValue(worksheet, rowIndex, colIndex).toString();
                    if(cellValue.match(/中文名|英文名|氏名|^番号$|性別|地域|区域|生年月日|職業|护照号|旅劵|旅券|职业|名单|名簿|種類/)) {
                      clientsRate++;
                    } else if(cellValue.match(/年[ 　]{0,}月[ 　]{0,}日|行[ 　]{0,}動[ 　]{0,}予[ 　]{0,}定|滞在|行.{0,}動|⾏.{0,}動|宿.{0,}泊.{0,}先|帰国|ホテル|空港|机场|空港|出発|酒店|住所|成田|便|国际线|国際線|行程/)) {
                      schedulesRate++;
                    } else if(cellValue.match(/日本入国予定|日本出国予定|中連協会員旅行会社|日本旅行社名|日本旅行社编号|中国旅行社名|中国旅行社编号|签证种类|入境|出境|中国側旅行会社|団体査証|個人査証|三年多次|五年多次|冲绳东北六县多次|一定经济能力多次|査証種別|申請人/)) {
                      basicRate++;
                    }

                  }
                }

                //console.log("basic:" + basicRate + ", clients:" + clientsRate + ", schedules:" + schedulesRate)
                if(basicRate >= 4 && clientsRate >= 4 && schedulesRate >= 4) {
                  // is binded 1 sheet
                  return worksheet
                } else if(basicRate >= 4 && clientsRate < basicRate && schedulesRate < basicRate) {
                  basicSheet = worksheet;
                } else if(clientsRate >= 4 && basicRate < clientsRate && schedulesRate < clientsRate) {
                  clientsSheet = worksheet;
                } else if(schedulesRate >= 4 && basicRate < schedulesRate && clientsRate < schedulesRate) {
                  schedulesSheet = worksheet;
                }
              }

              if(!clientsSheet) {
                //return workbook.Sheets[workbook.SheetNames[0]]
                return null;
              } else if(!basicSheet) {
                basicSheet = clientsSheet;
              }

              return {
                basicSheet: basicSheet,
                clientsSheet: clientsSheet,
                schedulesSheet: schedulesSheet
              };
            }

            // inteli convert date
            function inteliConvertDate(date) {
              var length = date.match(/[0-9]{1,}/g).length
              var day = date.match(/[0-9]{1,}/g)[length-1]
              var month = date.match(/[0-9]{1,}/g)[length-2]

              var today = {
                month: getAbsoluteToday().getMonth()+1,
                day: getAbsoluteToday().getDate()
              };

              var year = getAbsoluteToday().getFullYear();
              if(month < today.month || (month == today.month && day <= today.day)) {
                year += 1;
              }

              return year + "/" + month + "/" + day;
            }

            // guess visa type
            function guessVisaType(fileName, worksheet, clients) {
              // check clients length
              if(clients.length > 10) {
                return "group";
              }

              // check file name
              if(fileName.match(/3年|三年|３年|冲绳东北六县多次/)) {
                return "3";
              } else if(fileName.match(/5年|五年|５年|一定经济能力多次/)) {
                return "5";                
              } else if(fileName.match(/团|団|团|group/)) {
                return "group";
              }

              // check keyword
              excelLeft = worksheet["!ref"].split(":")[0].match(/[A-Za-z]{1,}/)[0].charCodeAt()
              excelTop = parseInt(worksheet["!ref"].split(":")[0].match(/[0-9]{1,}/)[0])
              excelRight = worksheet["!ref"].split(":")[1].match(/[A-Za-z]{1,}/)[0].charCodeAt()
              excelBottom = parseInt(worksheet["!ref"].split(":")[1].match(/[0-9]{1,}/)[0])
              for(var rowIndex = excelTop; rowIndex <= excelBottom; rowIndex++) {
                for(var colIndex = excelLeft; colIndex <= excelRight; colIndex++) {
                  var cellValue = getCellValue(worksheet, rowIndex, colIndex).toString();
                  if(cellValue && cellValue.match(/上色和打勾|希望的査証種別/)) {
                    var offset = 0;
                    var group = getCellValue(worksheet, rowIndex, colIndex + offset + 1);
                    if(!group) {
                      offset++;
                      group = getCellValue(worksheet, rowIndex, colIndex + offset + 1).replace(/[ 　]/g, "").split("団体")[0];
                    }
                    var individual = getCellValue(worksheet, rowIndex, colIndex + offset + 2).replace(/[ 　]/g, "").split("個人")[0];
                    var year3 = getCellValue(worksheet, rowIndex, colIndex + offset + 3).replace(/[ 　]/g, "").split("三年")[0];
                    var year5 = getCellValue(worksheet, rowIndex, colIndex + offset + 4).replace(/[ 　]/g, "").split("五年")[0];

                    if(individual != year5 && individual != year3 && individual != group) {
                      return "individual";
                    } else if(group != year5 && group != year3 &&  group != individual) {
                      return "group";
                    } else if(year5 != individual && year5 != group && year5 != year3) {
                      return "5";
                    } else if(year3 != individual && year3 != group && year3 != year5) {
                      return "3";
                    }
                  } else if(cellValue && cellValue.match(/沖縄及び東北三県数次|沖縄及び東北六県数次/)) {
                    return "3";
                  } else if(cellValue && cellValue.match(/相当な高所得者向け数次|十分な経済力保有者向け数次/)) {
                    return "5";
                  } else if(cellValue && cellValue.match(/団体|团体/)) {
                    return "group"
                  }
                }
              }

              return "individual";
            }


            // excel parser
            function parseWorkBook(workbook, name) {
                var worksheet = null;  // use for single sheet
                var worksheets = null; // use for multi sheets

                var chinaCompanyName = "";
                var chinaCompanyCode = "";
                var visaType = "";
                var dateArrival = "";
                var dateLeaving = "";
                var clients = [];
                var schedules = [];

                worksheets = getSeperateWorkBook(workbook);
                if(!worksheets) {
                  alert("Excel文件格式不正确!请仔细确认。")
                  return;
                } else if(!worksheets.clientsSheet) {
                  worksheet = worksheets;
                }

                /************************************** read ******************************************/
                if(worksheet) {
                  excelLeft = worksheet["!ref"].split(":")[0].match(/[A-Za-z]{1,}/)[0].charCodeAt()
                  excelTop = parseInt(worksheet["!ref"].split(":")[0].match(/[0-9]{1,}/)[0])
                  excelRight = worksheet["!ref"].split(":")[1].match(/[A-Za-z]{1,}/)[0].charCodeAt()
                  excelBottom = parseInt(worksheet["!ref"].split(":")[1].match(/[0-9]{1,}/)[0])

                  // china company name
                  for(var rowIndex = excelTop; rowIndex <= excelBottom; rowIndex++) {
                        for(var colIndex = excelLeft; colIndex <= excelRight; colIndex++) {
                              var cellValue = getCellValue(worksheet, rowIndex, colIndex).toString();
                              if((cellValue && cellValue == "中国旅行社名")) {
                                    chinaCompanyName = getCellValue(worksheet, rowIndex, colIndex+1)
                                    break;
                              }
                        }
                  }
                  if(chinaCompanyName.length <= 0 && getCellValue(worksheet, 3, "C".charCodeAt())) {
                        chinaCompanyName = getCellValue(worksheet, 3, "C".charCodeAt());                        
                  }

                  // china company code
                  for(var rowIndex = excelTop; rowIndex <= excelBottom; rowIndex++) {
                        for(var colIndex = excelLeft; colIndex <= excelRight; colIndex++) {
                              var cellValue = getCellValue(worksheet, rowIndex, colIndex).toString();
                              if((cellValue && cellValue == "中国旅行社编号")) {
                                    chinaCompanyCode = getCellValue(worksheet, rowIndex, colIndex+1)
                                    break;
                              }
                        }
                  }
                  if(chinaCompanyCode.length <= 0 && getCellValue(worksheet, 4, "C".charCodeAt())) {
                        chinaCompanyCode = getCellValue(worksheet, 4, "C".charCodeAt());                        
                  }

                  // visa type
                  for(var rowIndex = excelTop; rowIndex <= excelBottom; rowIndex++) {
                        for(var colIndex = excelLeft; colIndex <= excelRight; colIndex++) {
                              var cellValue = getCellValue(worksheet, rowIndex, colIndex).toString();
                              if((cellValue && cellValue == "签证种类")) {
                                    visaType = getCellValue(worksheet, rowIndex, colIndex+1)
                                    break;
                              }
                        }
                  }
                  if(visaType.length <= 0 && getCellValue(worksheet, 5, "C".charCodeAt())) {
                        visaType = getCellValue(worksheet, 5, "C".charCodeAt());                        
                  }

                  // date arrival
                  for(var rowIndex = excelTop; rowIndex <= excelBottom; rowIndex++) {
                        for(var colIndex = excelLeft; colIndex <= excelRight; colIndex++) {
                              var cellValue = getCellValue(worksheet, rowIndex, colIndex).toString();
                              if((cellValue && cellValue == "日本入境日期")) {
                                    dateArrival = getCellValue(worksheet, rowIndex, colIndex+1)
                                    break;
                              }
                        }
                  }
                  if(dateArrival.length <= 0 && getCellValue(worksheet, 6, "C".charCodeAt())) {
                        dateArrival = getCellValue(worksheet, 6, "C".charCodeAt());                        
                  }

                  // date leaving
                  for(var rowIndex = excelTop; rowIndex <= excelBottom; rowIndex++) {
                        for(var colIndex = excelLeft; colIndex <= excelRight; colIndex++) {
                              var cellValue = getCellValue(worksheet, rowIndex, colIndex).toString();
                              if((cellValue && cellValue == "日本出境日期")) {
                                    dateLeaving = getCellValue(worksheet, rowIndex, colIndex+1)
                                    break;
                              }
                        }
                  }
                  if(dateLeaving.length <= 0 && getCellValue(worksheet, 7, "C".charCodeAt())) {
                        dateLeaving = getCellValue(worksheet, 7, "C".charCodeAt());                        
                  }


                  // clients list
                  var clientsRowIndex = 1;
                  var clientsColIndex = "A".charCodeAt();
                  for(var rowIndex = excelTop; rowIndex <= excelBottom; rowIndex++) {
                        for(var colIndex = excelLeft; colIndex <= excelRight; colIndex++) {
                              var cellValue = getCellValue(worksheet, rowIndex, colIndex).toString();
                              if((cellValue && cellValue == "中文名")) {
                                    clientsColIndex = colIndex;
                                    clientsRowIndex = rowIndex + 1;
                                    break;
                              }
                        }
                  }
                  do {
                        var chineseName = getCellValue(worksheet, clientsRowIndex, clientsColIndex)
                        if(!chineseName || chineseName.length <= 0) {
                              break;
                        }

                        clients.push({
                              chineseName: getCellValue(worksheet, clientsRowIndex, clientsColIndex).replace(/[ 　]{1,}/, "").match(/.{0,8}/)[0],
                              englishName: getCellValue(worksheet, clientsRowIndex, clientsColIndex+1).match(/.{0,15}/)[0],
                              birthday: getCellValue(worksheet, clientsRowIndex, clientsColIndex+2),
                              gender: getCellValue(worksheet, clientsRowIndex, clientsColIndex+3),
                              hometown: getCellValue(worksheet, clientsRowIndex, clientsColIndex+4).replace(/\(.{0,}\)/g, "").replace(/（.{0,}）/g, "").replace(/[ 　]{1,}/, "").match(/.{0,5}/)[0],
                              passportNo: getCellValue(worksheet, clientsRowIndex, clientsColIndex+5).replace(/[ 　]{1,}/, "").match(/.{0,11}/)[0],
                              job: getCellValue(worksheet, clientsRowIndex, clientsColIndex+6).replace(/\(.{0,}\)/g, "").replace(/（.{0,}）/g, "").replace(/[ 　]{1,}/, "").match(/.{0,5}/)[0],
                        });
                        clientsRowIndex++;
                  } while(true);


                  // schedules
                  var schedulesRowIndex = 1;
                  var schedulesColIndex = "A".charCodeAt();
                  for(var rowIndex = excelTop; rowIndex <= excelBottom; rowIndex++) {
                        for(var colIndex = excelLeft; colIndex <= excelRight; colIndex++) {
                              var cellValue = getCellValue(worksheet, rowIndex, colIndex).toString();
                              if((cellValue && cellValue.match(/⾏.{0,}動.{0,}计.{0,}划/))) {
                                    schedulesColIndex = colIndex;
                                    schedulesRowIndex = rowIndex + 1;
                                    break;
                              }
                        }
                  }
                  do {
                        var plan = getCellValue(worksheet, schedulesRowIndex, schedulesColIndex)
                        if(!plan || plan.length <= 0) {
                              break;
                        }

                        schedules.push({
                              plan: getCellValue(worksheet, schedulesRowIndex, schedulesColIndex),
                              hotel: getCellValue(worksheet, schedulesRowIndex, schedulesColIndex+1),
                        });
                        schedulesRowIndex++;
                  } while(true);
                } else if(worksheets) {
                  /***************** clients SHEET ******************/
                  var worksheet = worksheets.clientsSheet;
                  excelLeft = worksheet["!ref"].split(":")[0].match(/[A-Za-z]{1,}/)[0].charCodeAt()
                  excelTop = parseInt(worksheet["!ref"].split(":")[0].match(/[0-9]{1,}/)[0])
                  excelRight = worksheet["!ref"].split(":")[1].match(/[A-Za-z]{1,}/)[0].charCodeAt()
                  excelBottom = parseInt(worksheet["!ref"].split(":")[1].match(/[0-9]{1,}/)[0])

                  // clients list
                  var clientsRowIndex = 1;
                  var clientsColIndex = "A".charCodeAt();
                  for(var rowIndex = excelTop; rowIndex <= excelBottom; rowIndex++) {
                        for(var colIndex = excelLeft; colIndex <= excelRight; colIndex++) {
                              var cellValue = getCellValue(worksheet, rowIndex, colIndex).toString();
                              if((cellValue && cellValue.match(/氏名/))) {
                                    clientsColIndex = colIndex;
                                    clientsRowIndex = rowIndex + 1;
                                    break;
                              }
                        }
                  }
                  do {
                        var chineseName = getCellValue(worksheet, clientsRowIndex, clientsColIndex)
                        if(!chineseName || chineseName.length <= 0) {
                              break;
                        }

                        clients.push({
                              chineseName: getCellValue(worksheet, clientsRowIndex, clientsColIndex).replace(/[ 　]{1,}/, "").match(/.{0,8}/)[0],
                              englishName: getCellValue(worksheet, clientsRowIndex, clientsColIndex+1).match(/.{0,15}/)[0],
                              gender: getCellValue(worksheet, clientsRowIndex, clientsColIndex+2),
                              hometown: getCellValue(worksheet, clientsRowIndex, clientsColIndex+3).replace(/\(.{0,}\)/g, "").replace(/（.{0,}）/g, "").replace(/[ 　]{1,}/, "").match(/.{0,5}/)[0],
                              birthday: getCellValue(worksheet, clientsRowIndex, clientsColIndex+4),
                              passportNo: getCellValue(worksheet, clientsRowIndex, clientsColIndex+5).replace(/[ 　]{1,}/, "").match(/.{0,11}/)[0],
                              job: getCellValue(worksheet, clientsRowIndex, clientsColIndex+6).replace(/\(.{0,}\)/g, "").replace(/（.{0,}）/g, "").replace(/[ 　]{1,}/, "").match(/.{0,5}/)[0],
                        });
                        clientsRowIndex++;
                  } while(true);

                  /***************** BASIC SHEET ******************/
                  var worksheet = worksheets.basicSheet;
                  excelLeft = worksheet["!ref"].split(":")[0].match(/[A-Za-z]{1,}/)[0].charCodeAt()
                  excelTop = parseInt(worksheet["!ref"].split(":")[0].match(/[0-9]{1,}/)[0])
                  excelRight = worksheet["!ref"].split(":")[1].match(/[A-Za-z]{1,}/)[0].charCodeAt()
                  excelBottom = parseInt(worksheet["!ref"].split(":")[1].match(/[0-9]{1,}/)[0])

                  // china company name
                  for(var rowIndex = excelTop; rowIndex <= excelBottom; rowIndex++) {
                    for(var colIndex = excelLeft; colIndex <= excelRight; colIndex++) {
                      var cellValue = getCellValue(worksheet, rowIndex, colIndex).toString();
                      if(cellValue && (cellValue == "中国旅行社名" || cellValue.match(/^会社名$/))) {
                        chinaCompanyName = getCellValue(worksheet, rowIndex, colIndex+1)
                        break;
                      } else if(cellValue.match(/公司名称/)) {
                        var companyNameRow = cellValue.split(/[\n\r]{1,}/)[0]
                        if(companyNameRow) {
                          chinaCompanyName = companyNameRow.split(/[:：]{1,}/)[1].match(/.{1,}司|.{1,}社|.{1,}\)|.{1,}）/)[0]
                          if(chinaCompanyName) {
                            chinaCompanyName = chinaCompanyName.replace(/[" 　"]{1,}/g, "");
                            if(chinaCompanyName.match(/[-0-9a-zA-Z]{9,11}/)) {
                              chinaCompanyCode = chinaCompanyName.match(/[-0-9a-zA-Z]{9,11}/)[0]
                            }
                          }
                          break;
                        }
                      } else if(cellValue.match(/指定番号/)) {
                        if(cellValue.match(/[-0-9a-zA-Z]{9,11}/)) {
                          chinaCompanyCode = cellValue.match(/[-0-9a-zA-Z]{9,11}/)[0]
                        } else {
                          cellValue = getCellValue(worksheet, rowIndex, colIndex+1).toString();
                          if(cellValue.match(/[-0-9a-zA-Z]{9,11}/)) {
                            chinaCompanyCode = cellValue.match(/[-0-9a-zA-Z]{9,11}/)[0]
                          }
                        }
                      }
                    }
                  }
                  /*
                  if(chinaCompanyName.length <= 0 && getCellValue(worksheet, 4, "C".charCodeAt())) {
                        chinaCompanyName = getCellValue(worksheet, 4, "C".charCodeAt());                        
                  }
                  */

                  // china company code
                  for(var rowIndex = excelTop; rowIndex <= excelBottom; rowIndex++) {
                        for(var colIndex = excelLeft; colIndex <= excelRight; colIndex++) {
                              var cellValue = getCellValue(worksheet, rowIndex, colIndex).toString();
                              if(cellValue && cellValue.match(/中国旅行社编号/)) {
                                    chinaCompanyCode = getCellValue(worksheet, rowIndex, colIndex+1)
                                    break;
                              } else if(cellValue && cellValue.match(/[gG]{1}[-a-zA-Z]{4,6}[-0-9]{1,5}/)) {
                                chinaCompanyCode = cellValue.match(/[gG]{1}[-a-zA-Z]{4,6}[-0-9]{1,5}/)[0]
                              }
                        }
                        if(chinaCompanyCode) {
                          break;
                        }
                  }
                  /*
                  if(chinaCompanyCode.length <= 0 && getCellValue(worksheet, 5, "C".charCodeAt())) {
                        chinaCompanyCode = getCellValue(worksheet, 5, "C".charCodeAt());                        
                  }
                  */

                  // visa type
                  for(var rowIndex = excelTop; rowIndex <= excelBottom; rowIndex++) {
                        for(var colIndex = excelLeft; colIndex <= excelRight; colIndex++) {
                              var cellValue = getCellValue(worksheet, rowIndex, colIndex).toString();
                              if((cellValue && cellValue == "签证种类")) {
                                    visaType = getCellValue(worksheet, rowIndex, colIndex+1)
                                    break;
                              }
                        }
                  }
                  if(visaType.length <= 0) {
                    visaType = guessVisaType(name, worksheet, clients);
                  }

                  // date arrival
                  for(var rowIndex = excelTop; rowIndex <= excelBottom; rowIndex++) {
                        for(var colIndex = excelLeft; colIndex <= excelRight; colIndex++) {
                              var cellValue = getCellValue(worksheet, rowIndex, colIndex).toString();
                              if(cellValue && (cellValue == "日本入境日期" || cellValue.match(/入国予定日/))) {
                                dateArrival = getCellValue(worksheet, rowIndex, colIndex+1)
                                if(!dateArrival) {
                                  dateArrival = getCellValue(worksheet, rowIndex, colIndex+2)
                                }
                                break;
                              } else {
                                cellValue = cellValue.replace(/[Ａ-Ｚａ-ｚ０-９]/g, function(s) {
                                  return String.fromCharCode(s.charCodeAt(0) - 0xFEE0);
                                }).replace(/[ 　()（）（）]{1,}/g, "")

                                if(cellValue.match(/[0-9]{1,}[^0-9\n\r]{1,}[0-9]{1,}[^0-9\n\r]{1,}[0-9]{1,}[^0-9\n\r]{1,}[0-9]{1,}[^0-9\n\r]{1,}[0-9]{1,}/) && cellValue.match(/平成|昭和|年|月|日|\//)) {
                                  if(cellValue.match(/[0-9]{1,}年[0-9]{1,}月[0-9]{1,}日/)) {
                                    dateArrival = cellValue.split(/[^平成昭和年月日0-9]{1,}/)[0]; // 年月日
                                  } else {
                                    dateArrival = cellValue.split(/[-~〜～ー]{1,}/)[0]                                    
                                  }
                                  dateArrival = inteliConvertDate(dateArrival);
                                  break;
                                }
                              }
                        }
                        if(dateArrival) {
                          break;
                        }                                                
                  }
                  if(dateArrival.length <= 0 && getCellValue(worksheet, 9, "C".charCodeAt())) {
                        dateArrival = getCellValue(worksheet, 9, "C".charCodeAt());                        
                  }

                  // date leaving
                  for(var rowIndex = excelTop; rowIndex <= excelBottom; rowIndex++) {
                        for(var colIndex = excelLeft; colIndex <= excelRight; colIndex++) {
                              var cellValue = getCellValue(worksheet, rowIndex, colIndex).toString();
                              if(cellValue && (cellValue == "日本出境日期" || cellValue.match(/出国予定日/))) {
                                    dateLeaving = getCellValue(worksheet, rowIndex, colIndex+1)
                                    if(!dateLeaving) {
                                      dateLeaving = getCellValue(worksheet, rowIndex, colIndex+2)
                                    }
                                    break;
                              } else {
                                cellValue = cellValue.replace(/[Ａ-Ｚａ-ｚ０-９]/g, function(s) {
                                  return String.fromCharCode(s.charCodeAt(0) - 0xFEE0);
                                }).replace(/[ 　()（）（）]{1,}/g, "") 
                                if(cellValue.match(/[0-9]{1,}[^0-9\n\r]{1,}[0-9]{1,}[^0-9\n\r]{1,}[0-9]{1,}[^0-9\n\r]{1,}[0-9]{1,}[^0-9\n\r]{1,}[0-9]{1,}/) && cellValue.match(/平成|昭和|年|月|日|\//)) {
                                  if(cellValue.match(/[0-9]{1,}年[0-9]{1,}月[0-9]{1,}日/)) {                                  
                                    dateLeaving = cellValue.split(/[^平成昭和年月日0-9 ]{1,}/)[1]; // 年月日
                                  } else {
                                    dateLeaving = cellValue.split(/[-~〜～ー]{1,}/)[1]
                                  }
                                  dateLeaving = inteliConvertDate(dateLeaving);
                                  break;
                                }
                              }
                        }
                        if(dateLeaving) {
                          break;
                        }                        
                  }
                  if(dateLeaving.length <= 0 && getCellValue(worksheet, 10, "C".charCodeAt())) {
                        dateLeaving = getCellValue(worksheet, 10, "C".charCodeAt());                        
                  }



                  /***************** SCHEDULES SHEET ******************/
                  if(worksheets.schedulesSheet) {
                    var worksheet = worksheets.schedulesSheet;
                    excelLeft = worksheet["!ref"].split(":")[0].match(/[A-Za-z]{1,}/)[0].charCodeAt()
                    excelTop = parseInt(worksheet["!ref"].split(":")[0].match(/[0-9]{1,}/)[0])
                    excelRight = worksheet["!ref"].split(":")[1].match(/[A-Za-z]{1,}/)[0].charCodeAt()
                    excelBottom = parseInt(worksheet["!ref"].split(":")[1].match(/[0-9]{1,}/)[0])

                    var schedulesRowIndex = 2;
                    var schedulesColIndex = "A".charCodeAt();
                    for(var rowIndex = excelTop; rowIndex <= excelBottom; rowIndex++) {
                          var found = false;
                          for(var colIndex = excelLeft; colIndex <= excelRight; colIndex++) {
                                var cellValue = getCellValue(worksheet, rowIndex, colIndex).toString();
                                if(cellValue && (cellValue.match(/⾏.{0,}動.{0,}予.{0,}定/) || cellValue.match(/行.{0,}動.{0,}予.{0,}定/) || cellValue.match(/行.{0,}动.{0,}予.{0,}定/))) {
                                      schedulesColIndex = colIndex;
                                      schedulesRowIndex = rowIndex + 1;
                                      found = true;
                                      break;
                                } else if(cellValue && (cellValue.match(/宿.{0,}泊.{0,}先/) || cellValue.match(/宿.{0,}泊.{0,}先/) || cellValue.match(/住.{0,}宿/))) {
                                      schedulesColIndex = colIndex - 1;
                                      schedulesRowIndex = rowIndex + 1;
                                      found = true;                                  
                                }
                          }
                          if(found) {
                            break;
                          }
                    }
                    do {
                          var plan = getCellValue(worksheet, schedulesRowIndex, schedulesColIndex)
                          if(!plan || plan.length <= 0) {
                                break;
                          }

                          schedules.push({
                                plan: getCellValue(worksheet, schedulesRowIndex, schedulesColIndex),
                                hotel: getCellValue(worksheet, schedulesRowIndex, schedulesColIndex+1),
                          });
                          schedulesRowIndex++;
                    } while(true);
                  }
                }

                // fill form
                fillForm(chinaCompanyName, chinaCompanyCode, visaType, dateArrival, dateLeaving, clients, schedules)

                // validation
                initialValidation();
                if(schedules.length > 0 && $("#schedules_container")[0].style.display == "none") {
                      $("#show_schedules").click()                      
                }
            }


            // function to replace text
            function escapeText(text) {
              return text.replace(/&#10;/g, " ");
            }

            // extract airport information from schedule table
            var firstTimeToExtract = true;
            /*
            var airportKeywords = [
              "旭川", "成田", "成田", "羽田", "羽田", "那霸", "那霸", "大阪", "大阪", "関西", "關西", "关西", "函館", "函馆", "札幌",
              "千歳", "千岁", "佐賀", "佐贺", "高松", "広島", "广岛", "仙台", "仙台", "名古屋", "名古屋", "静岡", "静冈", "福岡", "福冈",
              "沖縄", "冲绳", "愛知", "爱知", "東京", "东京", "中部", "京都", "京都"
            ];
            */
            airportKeywords = new RegExp(/旭川|成田|成田|羽田|羽田|那霸|那霸|大阪|大阪|関西|關西|关西|函館|函馆|札幌|千歳|千岁|佐賀|佐贺|高松|広島|广岛|仙台|仙台|名古屋|名古屋|静岡|静冈|福岡|福冈|沖縄|冲绳|愛知|爱知|東京|东京|中部|京都|京都/)

            function extractAirport(e) {
              // check if schedule existed
              if(!validateDates()) {
                //e.preventDefault();
                //e.stopPropagation();
                //alert("您未填写日本入境日期与出境日期");
                //return;

                <% offsetDate = 2 + rand(10) %>
                $("#dateArrival")[0].value = "<%= (Date.today+offsetDate).strftime('%Y/%m/%d') %>"
                $("#dateLeaving")[0].value = "<%= (Date.today+offsetDate+4+rand(5)).strftime('%Y/%m/%d') %>"
                if(!validateDateArrivalAndRegenerateSchedules()) {
                  e.preventDefault();
                  e.stopPropagation();
                  alert("您未填写日本入境日期与出境日期");
                  return;                  
                }
              }

              // extract and parse
              var lastDay = new Date(document.getElementById("dateLeaving").value);
              var firstDay = new Date(document.getElementById("dateArrival").value);
              var stayTerm = subDate(lastDay, firstDay) + 1;
              $("#stay_term")[0].value = stayTerm;

              if(firstTimeToExtract) {
                var inSchedule = $("#schedules_container tr").first().find("textarea")[1].value
                var outSchedule = $("#schedules_container tr").last().find("textarea")[1].value

                var inAirport = japanesed(inSchedule).match(airportKeywords);
                if(!inAirport || inAirport.length == 0) {
                  inAirport = ""
                } else {
                  inAirport = inAirport[0]
                }
                var outAirport = japanesed(outSchedule).match(airportKeywords);
                if(!outAirport || outAirport.length == 0) {
                  outAirport = inAirport
                } else {
                  outAirport = outAirport[0]
                }
                $("#airport_in")[0].value = inAirport;
                $("#airport_out")[0].value = outAirport;
                firstTimeToExtract = false;
              }
            }

            // function to send auto schedule basic information
            function sendAutoSchedule(e) {
              var inAirport = $("#airport_in")[0].value
              var outAirport = $("#airport_out")[0].value
              var stayTerm = $("#stay_term")[0].value

              // send
              $.ajax({
                  url: "/random_schedule",
                  type: 'GET',
                  data: {
                    in_airport: inAirport,
                    out_airport: outAirport,
                    stay_term: stayTerm
                  },
                  success: function(data) {
                    $('#modal-panel2').modal('hide');
                    $("#now_loading2")[0].style.display = "none"              
                    $("#parse_schedule_button")[0].disabled = false;
                    if(data.length == 0) {
                      alert("自动生成失败，没有模版。")
                    } else { // assignment
                      schedules = JSON.parse(data);
                      // escape
                      for(var i = 0; i < schedules.length; i++) {
                        schedules[i]["plan"] = escapeText(schedules[i]["plan"])
                        schedules[i]["hotel"] = escapeText(schedules[i]["hotel"])
                      }

                      containers = $("#schedules_container tr");
                      for(var i = 0; i < schedules.length && i < containers.length; i++) {
                        if(i != 0 && i != containers.length-1) {
                          $(containers[i]).find("textarea")[1].value = schedules[i]["plan"]
                        }
                        $(containers[i]).find("textarea")[2].value = schedules[i]["hotel"]
                      }
                      //console.log(schedules)
                    }
                  },
                  error: function(data) {
                    $('#modal-panel2').modal('hide');
                    $("#now_loading")[0].style.display = "none";         
                    $("#parse_schedule_button")[0].disabled = false;
                    alert("自动生成失败，没有模版。")
                  }
              });
              $("#parse_schedule_button")[0].disabled = true;
              $("#now_loading2")[0].style.display = "block"              
            }

            window.onload = function() {
                autoScheduleButton = document.getElementById("auto_schedule_button")
                if(autoScheduleButton) {
                  autoScheduleButton.addEventListener("click", extractAirport, false)
                }
                document.getElementById("parse_schedule_button").addEventListener("click", sendAutoSchedule, true)
            }
      </script>
<% end %>

<%= form_for(project) do |f| %>
<input type="hidden" id="company_data_json" value="<%= @company_codes.to_json({:only => [:name, :search_text]}) %>">

      <div class="col-md-6 col-md-offset-3 errors-container"><%= render :partial => "shared/error_messages", :locals => {:object => f.object} %></div>


      <!--************************* identity ***************************-->
      <div id="identity_container" class="dashed_container col-md-6 col-md-offset-3">
            <div class="title">
                  <i class="fa fa-user-plus"></i> 签证资料
            </div>

            <!-- Company Name -->
            <div id="china_company_container">
                  <%= f.label :china_company_name, "中国旅行社名" %> <i id="china_company_check"></i>
                  <%= f.text_field(
                              :china_company_name, :class => 'form-control',
                              :maxlength => "30",
                              :id => "company_input", :autocomplete => "off", :placeholder => "中国江苏国际旅行社", 
                              :onfocus=>"updateIconOnlyCheck('china_company_check', validateCompanyName, 'china_company_container')", 
                              :oninput=>"updateIconOnlyCheck('china_company_check', validateCompanyName, 'china_company_container')", 
                              :onchange=>"updateIcon('china_company_check', validateCompanyName, 'china_company_container')", 
                              :onblur => "updateIcon('china_company_check', validateCompanyName, 'china_company_container')" 
                  ) %>
                  <div class="container" id="suggest_container"><div id="suggest" style="display:none;"></div></div>
            </div>

            <!-- In charge person name -->
            <% if project.trader.validation_mode == "simplest" || project.trader.validation_mode == "easy" %>
                  <div id="in_charge_person_container" style="display:none">
            <% else %>
                  <div id="in_charge_person_container">
            <% end %>
                  <%= f.label :in_charge_person, "担当者姓名" %> <i id="in_charge_person_check"></i>
                  <%= f.text_field(
                              :in_charge_person, :class => 'form-control',
                              :maxlength => "5",
                              :id => "in_charge_person_input", :autocomplete => "off", :placeholder => "李利", 
                              :onfocus=>"updateIconOnlyCheck('in_charge_person_check', validateInChargePerson, 'in_charge_person_container')", 
                              :oninput=>"updateIconOnlyCheck('in_charge_person_check', validateInChargePerson, 'in_charge_person_container')", 
                              :onchange=>"updateIcon('in_charge_person_check', validateAndReplaceInChargePerson, 'in_charge_person_container')", 
                              :onblur => "updateIcon('in_charge_person_check', validateAndReplaceInChargePerson, 'in_charge_person_container')" 
                  ) %>
            </div>

            <!-- I charge phone -->
            <% if project.trader.validation_mode == "simplest" || project.trader.validation_mode == "easy" %>
                  <div id="in_charge_phone_container" style="display:none">
            <% else %>
                  <div id="in_charge_phone_container">
            <% end %>
                  <%= f.label :in_charge_phone, "担当者联系电话" %> <i id="in_charge_phone_check"></i>
                  <%= f.text_field(
                              :in_charge_phone, :class => 'form-control',
                              :maxlength => "20",
                              :id => "in_charge_phone_input", :autocomplete => "off", :placeholder => "13701083128", 
                              :onfocus=>"updateIconOnlyCheck('in_charge_phone_check', validateInChargePhone, 'in_charge_phone_container')", 
                              :oninput=>"updateIconOnlyCheck('in_charge_phone_check', validateInChargePhone, 'in_charge_phone_container')", 
                              :onchange=>"updateIcon('in_charge_phone_check', validateAndReplaceInChargePhone, 'in_charge_phone_container')", 
                              :onblur => "updateIcon('in_charge_phone_check', validateAndReplaceInChargePhone, 'in_charge_phone_container')" 
                  ) %>
            </div>


            <!-- Visa Type -->
            <%= f.label :visa_type, "签证种类" %> <i id="visa_type_check"></i>
            <div class="form-group">
                  <div id='visaType' class="btn-group" data-toggle="buttons" onchange="updateIcon('visa_type_check', validateVisaType)">
                      <label class="btn btn-default <%= 'active' if(project.visa_type == 'group') %>">
                          <input type="radio" autocomplete="off" value="group" name="project[visa_type]" <%= 'checked' if(project.visa_type == 'group') %>><%= visa_type_str("group") %>
                      </label>
                      <label class="btn btn-default <%= 'active' if(project.visa_type == 'individual') %>">
                          <input type="radio" autocomplete="off" value="individual" name="project[visa_type]" <%= 'checked' if(project.visa_type=='individual') %>><%= visa_type_str("individual") %>
                      </label>
                      <label class="btn btn-default <%= 'active' if(project.visa_type == '3years') %>">
                          <input type="radio" autocomplete="off" value="3years" name="project[visa_type]" <%= 'checked' if(project.visa_type == '3years') %>><%= visa_type_str("3years") %>
                      </label>
                      <label class="btn btn-default <%= 'active' if(project.visa_type == '5years') %>">
                          <input type="radio" autocomplete="off" value="5years" name="project[visa_type]" <%= 'checked' if(project.visa_type == '5years') %>><%= visa_type_str("5years") %>
                      </label>
                  </div>
            </div>

            <!-- Representative Name -->
            <% if project.trader.validation_mode == "simplest" || project.trader.validation_mode == "easy" || project.trader.validation_mode == "strict" %>
                  <div id="chinese_name_container" style="display: none">
            <% else %>
                  <div id="chinese_name_container">
            <% end %>
                  <%= f.label :representative_name_chinese, "签证代表人姓名(简体字)" %> <i id="chinese_name_check"></i>
                  <%= f.text_field(
                        :representative_name_chinese, :class => 'form-control', :placeholder => "王鹤", :autocomplete => "off",
                        :id => "chineseName",
                        :maxlength => "5",
                        :onfocus => "updateIconOnlyCheck('chinese_name_check', validateChineseName, 'chinese_name_container')",
                        :oninput => "updateIconOnlyCheck('chinese_name_check', validateChineseName, 'chinese_name_container')",
                        :onblur => "autoCompleteFirstChineseName()",
                        :onchange => "autoCompleteFirstChineseName()"
                  ) %>
            </div>


            <!-- Representative Name(english) -->
            <% if project.trader.validation_mode == "simplest" || project.trader.validation_mode == "easy" || project.trader.validation_mode == "strict" %>
                  <div id="english_name_container" style="display: none">
            <% else %>
                  <div id="english_name_container">
            <% end %>
                  <%= f.label :representative_name_english, "签证代表人姓名(拼音)" %> <i id="english_name_check"></i>
                  <%= f.text_field(
                        :representative_name_english, :class => 'form-control', :placeholder => "WANG FEIHE", :autocomplete => "off",
                        :id => "englishName",
                        :style => "ime-mode: disabled;",
                        :maxlength => "15",
                        :onfocus => "updateIconOnlyCheck('english_name_check', validateEnglishName, 'english_name_container')",
                        :oninput => "updateIconOnlyCheck('english_name_check', validateEnglishName, 'english_name_container')",
                        :onblur => "autoCompleteFirstEnglishName()",
                        :onchange => "autoCompleteFirstEnglishName()"
                  ) %>
            </div>

            <!-- total people -->
            <% if project.trader.validation_mode == "simplest" || project.trader.validation_mode == "easy" || project.trader.validation_mode == "strict" %>
                  <div id="total_people_container" style="display: none">
            <% else %>
                  <div id="total_people_container">
            <% end %>
                  <%= f.label :total_people, "总人数（团体1～40，其他1～10，※包含代表人）" %> <i id="total_people_check"></i>
                  <%= f.number_field(
                        :total_people, :placeholder => 1, :class => 'form-control', :maxlength => "3", :min => 1, :max => 40, :autocomplete => "off",
                        :id => "totalPeople",
                        :onchange => "initClientTableFromTotalPeople()",
                        :oninput => "updateIconOnlyCheck('total_people_check', validateTotalPeople, 'total_people_container')",
                        :onfocus => "updateIconOnlyCheck('total_people_check', validateTotalPeople, 'total_people_container')",
                        :onblur => "initClientTableFromTotalPeople()"
                  ) %>
            </div>



            <!-- date arrival -->
            <div id="date_arrival_container">
                  <%= f.label :date_arrival, "日本入境日期" %> <i id="date_arrival_check"></i> <i class="fa fa-chevron-down long"></i>
                  <% if @stay_term_lock %>
                      <div class="stay_term_lock"><i class="fa fa-refresh fa-2x switch"></i></div>
                  <% end %>
                  <% dateArrival = "" %>
                  <% dateArrival = project.date_arrival.strftime("%Y/%m/%d") if(!project.date_arrival.nil?) %>
                  <%= f.text_field(
                        :date_arrival, :placeholder => (Date.today+1).strftime("%Y/%m/%d"), :class => 'form-control datepicker', :autocomplete => "off",
                        :id => "dateArrival",
                        :maxlength => "10",
                        :oninput => "updateIconOnlyCheck('date_arrival_check', validateDateArrival, 'date_arrival_container')",
                        :onfocus => "updateIconOnlyCheck('date_arrival_check', validateDateArrival, 'date_arrival_container')",
                        :onchange => "updateIcon('date_arrival_check', validateDateArrivalAndRegenerateSchedules, 'date_arrival_container')",
                        #:onblur => "updateIcon('date_arrival_check', validateDateArrivalAndRegenerateSchedules, 'date_arrival_container')",
                        :value => dateArrival,
                  ) %>
            </div>


            <!-- date leaving -->
            <div id="date_leaving_container">
                  <%= f.label :date_leaving, "日本出境日期" %> <i id="date_leaving_check"></i> <i class="fa fa-chevron-down long"></i>
                  <% if @stay_term_lock %>
                      <div class="stay_term_lock"><i class="fa fa-refresh fa-2x switch"></i></div>
                  <% end %>
                  <% dateLeaving = "" %>
                  <% dateLeaving = project.date_leaving.strftime("%Y/%m/%d") if(!project.date_leaving.nil?) %>
                  <%= f.text_field(
                        :date_leaving, :placeholder => (Date.today+1).strftime("%Y/%m/%d"), :class => 'form-control datepicker', :autocomplete => "off",
                        :id => "dateLeaving",
                        :maxlength => "10",
                        :oninput => "updateIconOnlyCheck('date_leaving_check', validateDateLeaving, 'date_leaving_container')",
                        :onfocus => "updateIconOnlyCheck('date_leaving_check', validateDateLeaving, 'date_leaving_container')",
                        :onchange => "updateIcon('date_leaving_check', validateDateLeavingAndRegenerateSchedules, 'date_leaving_container')",
                        #:onblur => "updateIcon('date_leaving_check', validateDateLeavingAndRegenerateSchedules, 'date_leaving_container')",
                        :value => dateLeaving,
                  ) %>
            </div>
      </div>


      <!--************************* clients ***************************-->
      <div id="clients_container" class="dashed_container col-md-12 col-sm-12 col-xs-12">
            <div class="title">
                  <i class="fa fa-list"></i> 名单 <span class="number" id="clients-total"><%= f.object.clients.length %></span> 人
            </div>
            <div id="excel_button" class="btn btn-default" data-toggle="modal" data-target="#modal-panel">+ Excel</div>
            <div class="remove_all" onclick="removeAllClientRow()">×</div>

            <table class="table">
                  <tbody>
                        <%= f.fields_for :clients do |clients_field| %>
                        <tr id="client_<%= clients_field.index %>">
                              <td class="">
                                    <span class="index"><%= clients_field.index+1 %></span>
                                    <div id="clients_chinese_name_container_<%= clients_field.index %>" class="chinese_name_container">
                                          <%= clients_field.label :name_chinese, "中文名" %> <i id="clients_chinese_name_<%= clients_field.index %>"></i>
                                          <%= clients_field.text_field(
                                                :name_chinese, :autocomplete => "off",
                                                :class => "form-control",
                                                :placeholder => "王利",                                       
                                                :oninput => "validateAndUpdateFieldOnlyCheck('clients_chinese_name_container_#{clients_field.index}', 'chinese_name_container', validateChineseNameById)",
                                                :onfocus => "validateAndUpdateFieldOnlyCheck('clients_chinese_name_container_#{clients_field.index}', 'chinese_name_container', validateChineseNameById)",                                          
                                                :onchange => "validateAndUpdateField('clients_chinese_name_container_#{clients_field.index}', 'chinese_name_container', validateAndReplaceChineseNameById)",
                                                :onblur => "validateAndUpdateField('clients_chinese_name_container_#{clients_field.index}', 'chinese_name_container', validateAndReplaceChineseNameById)",
                                                :maxlength => "8",
                                                ) %>
                                    </div>
                              </td>
                              <td class="col col-md-2 col-sm-2 col-xs-2">
                                    <div id="clients_english_name_container_<%= clients_field.index %>" class="english_name_container">
                                          <%= clients_field.label :name_english, "英文名" %> <i id="clients_english_name_<%= clients_field.index %>"></i>
                                          <%= clients_field.text_field(
                                                :name_english, :autocomplete => "off",
                                                :class => "form-control",
                                                :placeholder => "WANG LI",
                                                :oninput => "validateAndUpdateFieldOnlyCheck('clients_english_name_container_#{clients_field.index}', 'english_name_container', validateEnglishNameById)",
                                                :onfocus => "validateAndUpdateFieldOnlyCheck('clients_english_name_container_#{clients_field.index}', 'english_name_container', validateEnglishNameById)",
                                                :onchange => "validateAndUpdateField('clients_english_name_container_#{clients_field.index}', 'english_name_container', validateAndReplaceEnglishNameById)",
                                                :onblur => "validateAndUpdateField('clients_english_name_container_#{clients_field.index}', 'english_name_container', validateAndReplaceEnglishNameById)",
                                                :maxlength => "15",
                                          ) %>
                                    </div>
                              </td>
                              <td class="col col-xs-2">
                                    <div id="clients_gender_container_<%= clients_field.index %>" class="gender_container">
                                          <%= clients_field.label :gender, "性别" %> <i id="clients_gender_<%= clients_field.index %>"></i>
                                          <div class="form-group">
                                                <div id='gender_type_<%= clients_field.index %>' class="gender_type btn-group" data-toggle="buttons" onchange="validateAndUpdateField('clients_gender_container_<%= clients_field.index %>', 'gender_container', validateGender)">
                                                    <label class="btn btn-default <%= 'active' if(clients_field.object.gender == 'male') %>">
                                                        <input type="radio" autocomplete="off" value="male" name="project[clients_attributes][<%= clients_field.index %>][gender]" <%= 'checked' if(clients_field.object.gender == 'male') %>> 男 
                                                    </label>
                                                    <label class="btn btn-default <%= 'active' if(clients_field.object.gender == 'female') %>">
                                                        <input type="radio" autocomplete="off" value="female" name="project[clients_attributes][<%= clients_field.index %>][gender]" <%= 'checked' if(clients_field.object.gender == 'female') %>> 女 
                                                    </label>
                                                </div>
                                          </div>
                                    </div>
                              </td>
                              <td>
                                    <div id="clients_hometown_container_<%= clients_field.index %>" class="hometown_container">
                                          <%= clients_field.label :hometown, "居住区域" %> <i id="clients_hometown_<%= clients_field.index %>"></i>
                                          <%= clients_field.text_field(
                                                :hometown, :autocomplete => "off",
                                                :class => "form-control",
                                                :placeholder => "上海",
                                                :oninput => "validateAndUpdateFieldOnlyCheck('clients_hometown_container_#{clients_field.index}', 'hometown_container', validateHometown)",
                                                :onfocus => "validateAndUpdateFieldOnlyCheck('clients_hometown_container_#{clients_field.index}', 'hometown_container', validateHometown)",
                                                :onchange => "validateAndUpdateField('clients_hometown_container_#{clients_field.index}', 'hometown_container', validateAndReplaceHometown)",
                                                :onblur => "validateAndUpdateField('clients_hometown_container_#{clients_field.index}', 'hometown_container', validateAndReplaceHometown)",                                                                              
                                                :maxlength => "5",
                                          ) %>
                                    </div>
                              </td>

                              <td class="col col-sm-2 col-xs-2">
                                    <div id="clients_birthday_container_<%= clients_field.index %>"class="birthday_container">
                                          <%= clients_field.label :birthday, "出生日期" %> <i id="clients_birthday_<%= clients_field.index %>"></i> <!--<i class="fa fa-chevron-down long"></i>-->
                                          <% birthday = "" %>
                                          <% birthday = clients_field.object.birthday.strftime("%Y/%m/%d") if(!clients_field.object.birthday.nil?) %>
                                          <%= clients_field.text_field(
                                                :birthday, :placeholder => Date.new(1970, 1, 1).strftime("%Y/%m/%d"),
                                                :class => 'form-control datepicker birthdaypicker', :autocomplete => "off",
                                                :maxlength => "10",
                                                :oninput => "validateAndUpdateFieldOnlyCheck('clients_birthday_container_#{clients_field.index}', 'birthday_container', validateBirthday)",
                                                :onfocus => "validateAndUpdateFieldOnlyCheck('clients_birthday_container_#{clients_field.index}', 'birthday_container', validateBirthday)",
                                                :onchange => "validateAndUpdateField('clients_birthday_container_#{clients_field.index}', 'birthday_container', validateBirthday)",
                                                :onblur => "validateAndUpdateField('clients_birthday_container_#{clients_field.index}', 'birthday_container', validateBirthday)",
                                                :value => birthday,
                                          ) %>
                                    </div>
                              </td>

                              <td>
                                    <div id="clients_passport_no_container_<%= clients_field.index %>" class="passport_no_container">
                                          <%= clients_field.label :passport_no, "护照号" %> <i id="clients_passport_no_<%= clients_field.index %>"></i>
                                          <%= clients_field.text_field(
                                                :passport_no, :autocomplete => "off",
                                                :class => "form-control",
                                                :placeholder => "G17108928",
                                                :oninput => "validateAndUpdateFieldOnlyCheck('clients_passport_no_container_#{clients_field.index}', 'passport_no_container', validatePassportNo)",
                                                :onfocus => "validateAndUpdateFieldOnlyCheck('clients_passport_no_container_#{clients_field.index}', 'passport_no_container', validatePassportNo)",
                                                :onchange => "validateAndUpdateField('clients_passport_no_container_#{clients_field.index}', 'passport_no_container', validateAndReplacePassportNo)",                                                                              
                                                :onblur => "validateAndUpdateField('clients_passport_no_container_#{clients_field.index}', 'passport_no_container', validateAndReplacePassportNo)",
                                                :maxlength => "11",
                                          ) %>
                                    </div>
                              </td>

                              <td class="col col-md-1">
                                    <div id="clients_job_container_<%= clients_field.index %>" class="job_container">
                                          <%= clients_field.label :job, "职业" %> <i id="clients_job_<%= clients_field.index %>"></i><div class="remove_client" onclick="removeClientRow('client_<%= clients_field.index %>')">×</div>
                                          <%= clients_field.text_field(
                                                :job, :autocomplete => "off",
                                                :class => "form-control",
                                                :placeholder => "",
                                                :oninput => "validateAndUpdateFieldOnlyCheck('clients_job_container_#{clients_field.index}', 'job_container', validateJob)",
                                                :onfocus => "validateAndUpdateFieldOnlyCheck('clients_job_container_#{clients_field.index}', 'job_container', validateJob)",
                                                :onchange => "validateAndUpdateField('clients_job_container_#{clients_field.index}', 'job_container', validateAndReplaceJob)",
                                                :onblur => "validateAndUpdateField('clients_job_container_#{clients_field.index}', 'job_container', validateAndReplaceJob)",
                                                :maxlength => "5",
                                          ) %>
                                    </div>
                              </td>

                        </tr>
                        <% end %>
                  </tbody>
            </table>
            <i class="fa fa-plus-square fa-4x add_client" onclick="addClientRowWithValidation()"></i>
      </div>

      <div class="row">
          <% if !@stay_term_lock && project.trader.auto_schedule == "inactive" && (project.trader.validation_mode == "simplest" || project.trader.validation_mode == "easy") %>
                  <div id="show_schedules" class="col col-md-2 col-md-offset-5 btn btn-default" style="border-radius: 30px; margin-bottom: 30px;" onclick="showSchedulesContainer()">+ 详细日程表</div>
          <% end %>
      </div>

      <!--************************* schedules ***************************-->
      <% if project.trader.validation_mode == "strict" || project.trader.auto_schedule == "active" || @stay_term_lock %>
            <div id="schedules_container" class="dashed_container col-md-10 col-md-offset-1" style="display:block">
      <% else %>
            <div id="schedules_container" class="dashed_container col-md-10 col-md-offset-1" style="display:none">
      <% end %>
            <div class="title">
                  <i class="fa fa-bus"></i> 日程表 共 <span class="number" id="schedules-total"><%= f.object.schedules.length %></span> 天
            </div>
            <% if project.trader.auto_schedule == "active" %>
              <div id="auto_schedule_button" class="btn btn-default" data-toggle="modal" data-target="#modal-panel2"><i class="fa fa-joomla"></i> 自動生成</div>
              <img src="/cube.gif" id="now_loading2" style="display:none"/>
            <% end %>
            <div class="remove_all" onclick="clearAllScheduleRow()">×</div>


            <% if project.trader.validation_mode == "easy" %>
                  <!--<div id="undecided_button" class="btn btn-info" onclick="set_all_schedules_undetermined()">未定</div>-->
            <% end %>
 
            <table class="table">
                  <tbody>
                        <%= f.fields_for :schedules do |schedules_field| %>
                        <tr>
                              <td class="col col-md-2 col-sm-2 col-lg-2 col-xs-3 date">
                                    <span class="date-index"><%= schedules_field.index+1 %></span>
                                    <div id="schedules_date_container_<%= schedules_field.index %>" class="date_container">
                                          <%= schedules_field.label :date, "日期" %> <i id="schedules_date_<%= schedules_field.index %>"></i>
                                          <%= schedules_field.text_area(
                                                :date, :autocomplete => "off",
                                                :readonly => true,
                                                :class => "form-control datepicker",
                                                :onchange => "validateDatesAndUpdateIcon()",
                                                :maxlength => "25",
                                                :placeholder => Date.today.strftime('%Y/%m/%d') + "\r\n ( " + chinese_week_day(Date.today.wday) + " )",
                                          ) %>
                                    </div>
                              </td>
                              <td class="col col-md-6 col-sm-6 col-lg-6 col-xs-5">
                                    <div id="schedules_plan_container_<%= schedules_field.index %>" class="plan_container">
                                          <%= schedules_field.label :plan, "行动计划" %> <i id="schedules_plan_<%= schedules_field.index %>"></i>
                                          <%= schedules_field.text_area(
                                                :plan, :autocomplete => "off",
                                                :oninput => "validateAndUpdateFieldOnlyCheck('schedules_plan_container_#{schedules_field.index}', 'plan_container', validatePlan)",
                                                :onfocus => "validateAndUpdateFieldOnlyCheck('schedules_plan_container_#{schedules_field.index}', 'plan_container', validatePlan)",
                                                :onblur => "validateAndUpdateField('schedules_plan_container_#{schedules_field.index}', 'plan_container', validateAndReplacePlan)",
                                                :onchange => "validateAndUpdateField('schedules_plan_container_#{schedules_field.index}', 'plan_container', validateAndReplacePlan)",
                                                :class => "form-control",
                                                :maxlength => "200",
                                                :placeholder => "例 : 上海浦东からNH272便にて, 東京成田空港へ到着. 东京都内を観光.",
                                          ) %>
                                    </div>
                              </td>
                              <td class="col col-md-4 col-sm-4 col-lg-4 col-xs-4">
                                    <div id="schedules_hotel_container_<%= schedules_field.index %>" class="hotel_container">
                                          <%= schedules_field.label :hotel, "住宿" %> <i id="schedules_hotel_<%= schedules_field.index %>"></i>
                                          <div class="clear_schedule" onclick="clearScheduleRow('<%= schedules_field.index %>')">×</div>
                                          <%= schedules_field.text_area(
                                                :hotel, :autocomplete => "off",
                                                :oninput => "validateAndUpdateFieldOnlyCheck('schedules_hotel_container_#{schedules_field.index}', 'hotel_container', validateHotel)",
                                                :onfocus => "validateAndUpdateFieldOnlyCheck('schedules_hotel_container_#{schedules_field.index}', 'hotel_container', validateHotel)",
                                                :onblur => "validateAndUpdateField('schedules_hotel_container_#{schedules_field.index}', 'hotel_container', validateAndReplaceHotel)",
                                                :onchange => "validateAndUpdateField('schedules_hotel_container_#{schedules_field.index}', 'hotel_container', validateAndReplaceHotel)",
                                                :class => "form-control",
                                                :maxlength => "100",
                                                :placeholder => "例 : 〒106-0032 東京都港区六本木7丁目18−11 国际ホテル",
                                          ) %>
                                    </div>
                              </td>
                        </tr>
                        <% end %>
                  </tbody>
            </table>
      </div>


      <!--************************* go back ***************************-->
      <% if project.trader.validation_mode == "strict" %>
            <div id="go_back_container" class="dashed_container col-md-10 col-md-offset-1" style="display:block">
      <% else %>
            <div id="go_back_container" class="dashed_container col-md-10 col-md-offset-1" style="display:none">
      <% end %>
            <div class="title">
                  <i class="fa fa-plane"></i> 回国航班
            </div>
            <div class="row">
                  <div class="col-md-2 col-sm-2 col-xs-2 cell">
                        <div id="flight_name_container">
                              <%= f.label :flight_name, "航班" %> <i id="flight_name_check"></i>
                              <%= f.text_field(
                                    :flight_name, :placeholder => "MU272", :class => 'form-control', :autocomplete => "off",
                                    :id => "flight_name",
                                    :maxlength => "10",
                                    :oninput => "updateIconOnlyCheck('flight_name_check', validateFlightName, 'flight_name_container')",
                                    :onfocus => "updateIconOnlyCheck('flight_name_check', validateFlightName, 'flight_name_container')",
                                    :onchange => "updateIcon('flight_name_check', validateAndReplaceFlightName, 'flight_name_container')",
                                    :onblur => "updateIcon('flight_name_check', validateAndReplaceFlightName, 'flight_name_container')",
                              ) %>
                        </div>
                  </div>
                  <div class="col-md-2 col-sm-2 col-xs-2 cell">
                        <div id="japan_airport_container">
                              <%= f.label :japan_airport, "出发地点" %> <i id="japan_airport_check"></i>
                              <%= f.text_field(
                                    :japan_airport, :placeholder => "成田", :class => 'form-control', :autocomplete => "off",
                                    :id => "japan_airport",
                                    :maxlength => "5",
                                    :oninput => "updateIconOnlyCheck('japan_airport_check', validateJapanAirport, 'japan_airport_container')",
                                    :onfocus => "updateIconOnlyCheck('japan_airport_check', validateJapanAirport, 'japan_airport_container')",
                                    :onchange => "updateIcon('japan_airport_check', validateAndReplaceJapanAirport, 'japan_airport_container')",
                                    :onblur => "updateIcon('japan_airport_check', validateAndReplaceJapanAirport, 'japan_airport_container')",
                              ) %>
                        </div>
                  </div>


                  <div class="col-md-3 col-sm-3 col-xs-3 cell">
                        <div id="departure_time_container">
                              <%= f.label :departure_time, "起飞时间" %> <i id="departure_time_check"></i><br/>
                              <%= f.time_select(
                                    :departure_time, 
                                    :autocomplete => "off",
                                    :id => "departure_time",
                                    :prompt => "---",
                                    :time_separator => ":",
                              ) %>
                        </div>
                  </div>


                  <div class="col-md-2 col-sm-2 col-xs-2 cell">
                        <div id="china_airport_container">
                              <%= f.label :china_airport, "到达地点" %> <i id="china_airport_check"></i>
                              <%= f.text_field(
                                    :china_airport, :placeholder => "上海", :class => 'form-control', :autocomplete => "off",
                                    :id => "china_airport",
                                    :maxlength => "5",
                                    :oninput => "updateIconOnlyCheck('china_airport_check', validateChinaAirport, 'china_airport_container')",
                                    :onfocus => "updateIconOnlyCheck('china_airport_check', validateChinaAirport, 'china_airport_container')",
                                    :onchange => "updateIcon('china_airport_check', validateAndReplaceChinaAirport, 'china_airport_container')",
                                    :onblur => "updateIcon('china_airport_check', validateAndReplaceChinaAirport, 'china_airport_container')",
                              ) %>
                        </div>
                  </div>

                  <div class="col-md-3 col-sm-3 col-xs-3 cell">
                        <div id="arrival_time_container">
                              <%= f.label :arrival_time, "到达时间" %> <i id="arrival_time_check"></i><br/>
                              <%= f.time_select(
                                    :arrival_time, 
                                    :autocomplete => "off",
                                    :id => "arrival_time",
                                    :prompt => "---",
                                    :time_separator => ":",
                              ) %>
                        </div>
                  </div>                  
            </div>
      </div>


      <div class="col-md-4 col-md-offset-4 col-sm-4 col-sm-offset-4 col-xs-4 col-xs-offset-4">
            <%= f.submit button_text, :class => "btn btn-lg btn-primary", :id => "send_button" %>
      </div>
<% end %>
      


<!-- *************************** alert form ***************************** -->
<div class="alert alert-danger alert-panel" id="failed-alert">
  <div class="title"><strong>对不起，未填写完毕，请再次确认.</strong></div><br/>
  <ul>
        <content>
        </content>
  <ul>
</div>




<!-- **************************** excel area ***************************** -->
<div class="modal fade" id="modal-panel" tabindex="-1">
    <div class="modal-dialog">

        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true">&times;</span>
                </button>

                <h5 class="modal-title" id="modal-label">您可以从Excel文件读取名单. 请打开Excel文件，选择全文后，复制与粘贴到此处.</h5>
            </div>


            <div class="modal-body">
                  <textarea id="excel_area" class="form-control" placeholder="李利&#009;&#009;LI LI&#009;&#009;男&#009;&#009;上海&#009;&#009;1950/1/1&#009;&#009;G171717171&#009;&#009;经理"></textarea>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">关闭</button>
                <button type="button" class="btn btn-primary" id="parse-button">确定</button>
            </div>
        </div>
    </div>
</div>

<!-- schedule modal panel -->
<div class="modal fade" id="modal-panel2" tabindex="-1">
    <div class="modal-dialog">

        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true">&times;</span>
                </button>

                <h5 class="modal-title" id="modal-label">　</h5>
            </div>

            <div class="modal-body">
                  日本入境区域<input type="text" autocomplete="off" class="form-control" placeholder="成田" id="airport_in" maxlength="5">
                  日本出境区域<input type="text" autocomplete="off" class="form-control" placeholder="成田" id="airport_out" maxlength="5">
                  <input type="hidden" autocomplete="off" class="form-control" placeholder="10" id="stay_term" maxlength="2" value="<%= project.stay_term %>">
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">关闭</button>
                <button type="button" class="btn btn-primary" id="parse_schedule_button">确定</button>
            </div>
        </div>
    </div>
</div>


<% if is_admin? %>
      <div id="admin"></div>
<% end %>

<% if project.trader.validation_mode == "easy" %>
      <div id="easy_validation"></div>
<% elsif project.trader.validation_mode == "strict" %>
      <div id="strict_validation"></div>
<% elsif project.trader.validation_mode == "simplest" %>
      <div id="simplest_validation"></div>
<% end %>
